## KUBERNETES Google Cloud Platform (GCP) DEPLOY See .travis.gcp.yml
# Requirements #
# - Google Cloud SDK CLI on Travis + Google Cloud auth configuration on travis.
# - Encrypt a 'service-account.json' file in Travis that is provided as part of the pipeline to GCP cluster to authenticate.

# Docker requires su permisions
sudo: required

services:
  - docker

before_install:
  # Get Dencrypted service-account.json fron service-account.enc
  - openssl aes-256-cbc -K $encrypted_0c35eebf403c_key -iv $encrypted_0c35eebf403c_iv -in service-account.json.enc -out service-account.json -d
  # Install Google Cloud SDK CLI
  - curl https://sdk.cloud.google.com | bash > /dev/null; # Get GCP Env files
  - source $HOME/google-cloud-sdk/path.bash.inc # Setup gcp bash environment in travis.
  - gcloud components update kubectl # Install kubectl cli in travis
  # Authenticate with GCP
  - gcloud auth activate-service-account --key-file service-account.json # Load authentication
  # Project Config
  - gcloud config set project node-multi-k8s-skeleton
  - gcloud config set compute/zone us-central1-a	
  - gcloud container clusters get-credentials test-multi-cluster
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

# Run Continuous Integration tests on Travis-built Containers before Pushing new version to Docker Hub
script:
  - docker run jonpham/fib-react-client npm run test -- --coverage

after_success:
  - docker build -t jonpham/fib-react-client ./frontend-client
  - docker build -t jonpham/fib-node-api ./backend-server
  - docker build -t jonpham/fib-node-worker ./worker
  - docker build -t jonpham/fib-proxy ./nginx
  # Log into the DockerHub
  - echo "$DOCKERHUB_PW" | docker login -u "$DOCKERHUB_ID" --password-stdin
  # Take those images & push them to docker hub
  - docker push jonpham/fib-react-client
  - docker push jonpham/fib-node-api
  - docker push jonpham/fib-node-worker
  - docker push jonpham/fib-proxy

